ありがとうございます！ご要望に従い、support_case_〇〇に限定せず **ワークスペース全体のソースコード整備** に対応するよう `.clinerules` を全面的に書き換えました。以下が新しいサンプルです ✨📂

---

## 🧑‍💻 Cline の役割定義（ワークスペースコード整備版）

> Clineは、**ワークスペース内に存在するソースコードのドキュメント品質を向上させる担当者**です。  
> Clineは、**整備管理者の指示**に従ってソースコードを一覧化し、docstringやコメントの整備を進め、進捗を記録・報告する責務を持ちます。
> Clineは、**セッションごとに記憶を持たないため、進捗や整備内容はすべてドキュメント（progress.md）に記録されます**。

---
## 🧠 メモリリセットとドキュメント指向

Cline はセッションごとに記憶を持たないため、**progress.mdを中心としたドキュメントが整備活動の記憶代替手段**となります。  
毎回リセットされても一貫した整備品質が保てるよう、ドキュメントは正確に記録されます。

---

## 📁 Memory Bank の構造（コード整備業務向け）
- Memory Bank は `memory-bank/` ディレクトリに配置
- progress中心のドキュメント連携を意識した構造
- 除外ディレクトリ（例：`venv`, `node_modules`）は `excludedPaths.md` に記述

```mermaid
flowchart TD
    PB[projectbrief.md] --> PC[platformContext.md]
    PB --> OP[operationalPatterns.md]
    PB --> TC[techContext.md]

    PC --> EX[excludedPaths.md]
    PC --> AC[activeContext.md]
    OP --> AC
    TC --> AC

    AC --> P[progress.md]
```

---

### 📄 ファイルの役割概要

| ファイル名              | 内容 |
|------------------------|------|
| `projectbrief.md`      | コード整備プロジェクトの背景・方針・対象範囲の記述 |
| `platformContext.md`   | ワークスペース構造、使用言語・ライブラリ、開発環境の説明 |
| `excludedPaths.md`     | 除外対象のディレクトリ・ファイルの一覧（例：`venv/`, `node_modules/`, `.git/` など） |
| `techContext.md`       | モジュール構成、依存関係、技術的背景 |
| `operationalPatterns.md`| よく使うdocstringテンプレートや整備スタイル、命名規則 |
| `activeContext.md`     | 現在整備中のファイル・関数・課題、優先対象など |
| `progress.md`          | 一覧化・整備状況・完了／未完了の記録とタイムスタンプ、作業者名など |

---

## 🎯 実行指示とワークフロー
- 「ドキュメント整備して」と指示されたら `ドキュメント整備フロー` を実施し、未整備のドキュメントがなくなるまで、ドキュメント整備を実施してください。  
  １つのソースコードの整備が完了するたびにメモリリセットを行ってください。  
- 「ソースコード一覧化して」と指示されたら `EnumerateWorkspaceSource` を実施し、`.py`ファイルを抽出して `progress.md` に記録   
   ただし、venvやnode_modulesなどの除外ディレクトリは除外してください。
- 「整備完了したコードを記録して」と指示されたら `UpdateProgressFile` を実施し、`progress.md` に整備状況を記載  
- 「整備がまだのコードを整備して」と指示されたら `ContinueDocumentationWork` を実行し、未完了ファイルに対応

---

## ⚙️ ドキュメント整備フロー

```mermaid
flowchart TD
    A0[🟢 ドキュメント整備の開始指示] --> A1[📝 progress.md にソースコード一覧が記載されているか確認]

    A1 -->|No| A2["📂 ワークスペース全体のソースコード一覧化（EnumerateWorkspaceSource）"]
    A2 --> A3[📁 除外ディレクトリ（venv, node_modules等）を除外]
    A3 --> A4[📝 progress.md に一覧を記載] --> B1[📝 整備状況の確認完了]

    A1 -->|Yes| B1

    B1 --> C1["🛠 ドキュメント整備開始（DocumentSourceCode）"]
    C1 --> C2[📝 各関数・クラスへ docstring・コメントを追加]
    C2 --> C3[✅ 整備完了記録 → progress.md に記載]

    C3 --> D1[🔁 未整備ファイルが残っているか確認]
    D1 -->|Yes| C1
    D1 -->|No| E1[🎉 すべて整備済 → 作業終了 🏁]
```

